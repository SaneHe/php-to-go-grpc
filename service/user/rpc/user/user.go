// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"

	rpc "book/service/user/rpc/rpc"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	LoginResponse = rpc.LoginResponse
	LoginRequest  = rpc.LoginRequest

	User interface {
		Login(ctx context.Context, in *LoginRequest) (*LoginResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Login(ctx context.Context, in *LoginRequest) (*LoginResponse, error) {
	client := rpc.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in)
}
